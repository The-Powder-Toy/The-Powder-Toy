.TH "SDL_MouseMotionEvent" "3" "Tue 11 Sep 2001, 22:59" "SDL" "SDL API Reference" 
.SH "NAME"
SDL_MouseMotionEvent \- Mouse motion event structure
.SH "STRUCTURE DEFINITION"
.PP
.nf
\f(CWtypedef struct{
  Uint8 type;
  Uint8 state;
  Uint16 x, y;
  Sint16 xrel, yrel;
} SDL_MouseMotionEvent;\fR
.fi
.PP
.SH "STRUCTURE DATA"
.TP 20
\fBtype\fR
\fBSDL_MOUSEMOTION\fP
.TP 20
\fBstate\fR
The current button state
.TP 20
\fBx\fR, \fBy\fR
The X/Y coordinates of the mouse
.TP 20
\fBxrel\fR, \fByrel\fR
Relative motion in the X/Y direction
.SH "DESCRIPTION"
.PP
\fBSDL_MouseMotionEvent\fR is a member of the \fI\fBSDL_Event\fR\fR union and is used when an event of type \fBSDL_MOUSEMOTION\fP is reported\&.
.PP
Simply put, a \fBSDL_MOUSEMOTION\fP type event occurs when a user moves the mouse within the application window or when \fI\fBSDL_WarpMouse\fP\fR is called\&. Both the absolute (\fBx\fR and \fBy\fR) and relative (\fBxrel\fR and \fByrel\fR) coordinates are reported along with the current button states (\fBstate\fR)\&. The button state can be interpreted using the \fBSDL_BUTTON\fP macro (see \fI\fBSDL_GetMouseState\fP\fR)\&.
.PP
If the cursor is hidden (\fI\fBSDL_ShowCursor\fP(0)\fR) and the input is grabbed (\fI\fBSDL_WM_GrabInput\fP(SDL_GRAB_ON)\fR), then the mouse will give relative motion events even when the cursor reaches the edge fo the screen\&. This is currently only implemented on Windows and Linux/Unix-a-likes\&.
.SH "SEE ALSO"
.PP
\fI\fBSDL_Event\fR\fR, \fI\fBSDL_MouseButtonEvent\fR\fR
.\" created by instant / docbook-to-man, Tue 11 Sep 2001, 22:59
